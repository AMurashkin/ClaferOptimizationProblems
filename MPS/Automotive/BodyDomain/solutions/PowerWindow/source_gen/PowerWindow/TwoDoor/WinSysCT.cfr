/*************** Reference_Model ***************/ 

abstract System 
abstract FeatureModel 
abstract Architecture 
abstract FunctionalAnalysis 
abstract HardwareArchitecture 
abstract DeviceNodeClassification 
abstract CommTopology 
abstract PowerTopology 
abstract Deployment 

abstract Feature 

abstract FunctionalAnalysisComponent 
  deployedTo -> DeviceNode 
  xor implementation 
    hardware 
      [deployedTo.type in (EEDeviceNode , SmartDeviceNode)]
    software 
      [deployedTo.type in SmartDeviceNode]


abstract AnalysisFunction : FunctionalAnalysisComponent 
  [deployedTo.type in SmartDeviceNode]

abstract FunctionalDevice : FunctionalAnalysisComponent 
  [deployedTo.type in (SmartDeviceNode , EEDeviceNode)]

abstract FunctionConnector 
  sender -> FunctionalAnalysisComponent 
  receiver -> FunctionalAnalysisComponent 
  deployedTo -> HardwareDataConnector ? 
    [this.parent in this.deployedFrom]
    [(sender.deployedTo.dref , receiver.deployedTo.dref) in (deployedTo.endpoint.dref)]
  [(sender.deployedTo.dref = receiver.deployedTo.dref) <=> no(this.deployedTo)]


enum DeviceNodeType = SmartDeviceNode | EEDeviceNode | PowerDeviceNode
abstract DeviceNode 
  type -> DeviceNodeType 

abstract HardwareConnector 

abstract PowerConnector : HardwareConnector 
  source -> DeviceNode 
  sink -> DeviceNode 

abstract LoadPowerConnector : PowerConnector 
abstract DevicePowerConnector : PowerConnector 

abstract HardwareDataConnector : HardwareConnector 
  endpoint -> DeviceNode 2..* 
  deployedFrom -> FunctionConnector 1..* 
    [this.deployedTo = this.parent]

abstract DiscreteDataConnector : HardwareDataConnector 
abstract AnalogDataConnector : HardwareDataConnector 

abstract BusConnector : HardwareDataConnector 
  [all e : endpoint | e.type = SmartDeviceNode]
  xor type 
    LowSpeedCAN 
    HighSpeedCAN 
    LIN 
    FlexRay 

abstract LogicalBusBridge : HardwareDataConnector 
  bus -> BusConnector 2..2 
  [all e : this.endpoint | e.type = SmartDeviceNode]

// Automotive Concepts [TODO] 
abstract ECU : DeviceNode 
abstract Switch : DeviceNode 
abstract Motor : DeviceNode 
abstract Inline : DeviceNode 
  abstract Pin : DeviceNode 
// End Automotive Concepts 

/*************** End Reference_Model ***************/ 

/*************** WinSysCT ***************/ 

abstract WinSysCT : CommTopology 
  dn -> WinSysDN 
  switchMotorDisc : DiscreteDataConnector ? 
    [this.endpoint = (WinSysCT.dn.Switch , WinSysCT.dn.Motor)]
  switchBCMDisc : DiscreteDataConnector ? 
    [this.endpoint = (WinSysCT.dn.Switch , WinSysCT.dn.BCM.dref)]
  switchDoorModuleDisc : DiscreteDataConnector ? 
    [this.endpoint = (WinSysCT.dn.Switch , WinSysCT.dn.DoorModule)]
  motorBCMDisc : DiscreteDataConnector ? 
    [this.endpoint = (WinSysCT.dn.Motor , WinSysCT.dn.BCM.dref)]
  motorDoorModuleDisc : DiscreteDataConnector ? 
    [this.endpoint = (WinSysCT.dn.Motor , WinSysCT.dn.DoorModule)]
  localLowSpeedBus : BusConnector ? 
    [this.endpoint in (WinSysCT.dn.BCM.dref , WinSysCT.dn.DoorModule , WinSysCT.dn.Switch , WinSysCT.dn.Motor)]
    [this.type.LIN || this.type.LowSpeedCAN]

/*************** End WinSysCT ***************/ 

/*************** WinSysDN ***************/ 

abstract WinSysDN : DeviceNodeClassification 
  Switch : DeviceNode 
    [this.type in (SmartDeviceNode , EEDeviceNode)]
  Motor : DeviceNode 
    [this.type in (SmartDeviceNode , EEDeviceNode)]
  DoorInline : DeviceNode 
    [this.type in (PowerDeviceNode)]
  DoorModule : DeviceNode ? 
    [this.type in (SmartDeviceNode)]
  BCM -> Car.CarArchitecture.CarHA.CarDN.BCM ? 
  EC -> Car.CarArchitecture.CarHA.CarDN.ElectricCenter 

/*************** End WinSysDN ***************/ 

/*************** Car ***************/ 

Car : System 
  CarArchitecture : Architecture 
    CarHA : HardwareArchitecture 
      CarDN : DeviceNodeClassification 
        BCM : DeviceNode ? 
          [this.type in (SmartDeviceNode)]
        ElectricCenter : DeviceNode 
          [this.type in (PowerDeviceNode)]

/*************** End Car ***************/ 

