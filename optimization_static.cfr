abstract Service
    cpu: integer
    machine -> Machine // the -> means every service must be allocated to some machine 

// List of Services

MailService : Service
    [cpu = 8]

SearchService : Service
    [cpu = 7]

CalendarService : Service
    [cpu = 5]

DriveService : Service
    [cpu = 4]

GroupsService : Service
    [cpu = 5]

// an empty set of services: type-checks well    
emptyServices : Service 0

// Machine
abstract Machine
    services -> Service* = Mail, Search, Calendar, Drive, Groups

    Mail -> Service ? = (if (MailService.machine = this) then MailService else emptyServices)
    Search -> Service ? = (if (SearchService.machine = this) then SearchService else emptyServices)
    Calendar -> Service ? = (if (CalendarService.machine = this) then CalendarService else emptyServices)
    Drive -> Service ? = (if (DriveService.machine = this) then DriveService else emptyServices)
    Groups -> Service ? = (if (GroupsService.machine = this) then GroupsService else emptyServices)

    total_cpu : integer = sum services.cpu
    [total_cpu <= this.cpuLimit]

    cpuLimit : integer
    isFree : integer = (if (#this.services = 0) then 1 else 0)

// List of Machines

GoogleCA : Machine
    [cpuLimit = 20]

GoogleNY : Machine
    [cpuLimit = 10]

GoogleTX : Machine
    [cpuLimit = 11]

abstract Task
    total_free : integer = sum Machine.isFree

MyTask: Task
<<max MyTask.total_free>>
